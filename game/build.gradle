plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.0.1.RELEASE'
    id 'application'
}

group 'net.minecraftn'
version '1.3'

dependencyManagement {
    imports {
        mavenBom 'org.apache.logging.log4j:log4j-bom:2.17.2'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.l33tlabs.twl:pngdecoder:1.0'
    implementation 'org.joml:joml:1.9.6'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}


test {
    useJUnitPlatform()
}

// log4j

dependencies {
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.2'
}





// LWJGL

import org.gradle.internal.os.OperatingSystem

project.ext.lwjglVersion = "3.3.1"

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
    def osArch = System.getProperty("os.arch")
    project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
            ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
            : "natives-linux"
    break
    case OperatingSystem.MAC_OS:
    project.ext.lwjglNatives = "natives-macos"
    break
    case OperatingSystem.WINDOWS:
    def osArch = System.getProperty("os.arch")
    project.ext.lwjglNatives = osArch.contains("64")
            ? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
            : "natives-windows-x86"
    break
}


repositories {
    mavenCentral()
}

dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
}

// Manifests
jar {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes 'Implementation-Title': 'Minecraftnt Client',
                'Main-Class': 'net.minecraftnt.client.Main'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    archiveFileName.set("client.jar")
}

application {
    mainClass.set('net.minecraftnt.client.Main')
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "io.github.spair:imgui-java-app:1.86.4"
    implementation 'org.awaitility:awaitility:4.2.0'
    implementation 'com.google.code.gson:gson:2.9.1'
}
